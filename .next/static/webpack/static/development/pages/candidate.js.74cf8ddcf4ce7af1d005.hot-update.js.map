{"version":3,"file":"static/webpack/static\\development\\pages\\candidate.js.74cf8ddcf4ce7af1d005.hot-update.js","sources":["webpack:///./components/Header.js","webpack:///./components/myLayout.js","webpack:///./pages/candidate.js"],"sourcesContent":["import Link from 'next/link';\r\n\r\nconst linkStyle = {\r\n    marginRight: 15\r\n};\r\n\r\nconst Header = () => (\r\n    <div>\r\n        <Link href=\"/\">\r\n            <a style={linkStyle}>Home</a>\r\n        </Link>\r\n        <Link href=\"/about\">\r\n            <a style={linkStyle}>About</a>\r\n        </Link>\r\n    </div>\r\n);\r\n\r\nexport default Header;","import Header from './Header';\r\nimport React from \"react\";\r\n\r\nconst layoutStyle = {\r\n    margin: 20,\r\n    padding: 20,\r\n    border: '1px solid #DDD'\r\n};\r\n\r\nconst Layout = props => (\r\n    <div style={layoutStyle}>\r\n        <Header />\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default Layout;","import fetch from 'isomorphic-unfetch'\r\nimport React from \"react\";\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Header from \"../components/header\";\r\nimport Layout from \"../components/myLayout\";\r\n\r\nCandidate.getInitialProps = async ({ req, query }) => {\r\n    const pageRequest = `${\"http:\"}//${\"localhost:3000\"}/api/tweets?id=${query.id}`;\r\n    const res = await fetch(pageRequest);\r\n    const json = await res.json();\r\n    console.log(json);\r\n    return {name: query.title, data: json}\r\n};\r\n\r\n\r\nexport default function Candidate(ctx) {\r\n    return (\r\n        <>\r\n        <Layout>\r\n        <h1> Political Tweeter Prototype V1! </h1>\r\n        <h2> Tweets from {ctx.name}  </h2>\r\n            {ctx.data.candidates_info.map(post => (\r\n                <li key={post.twitter_post_id}>\r\n                    <a> ID: {post.twitter_post_id}</a>\r\n                    <p>Primary term: {post.primary_term}</p>\r\n                    <p>Hashtag: {post.hashtag}</p>\r\n                    <p>Date: {post.tweet_date}</p>\r\n                    <Divider/>\r\n                </li>\r\n    ))}\r\n        </Layout>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AADA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AACA;AAUA;;;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AACA;AACA;AACA;AAHA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAAA;AACA;AADA;AAGA;AACA;AAJA;AAKA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAYA;;;;A","sourceRoot":""}