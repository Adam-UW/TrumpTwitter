{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DanLo\\\\WebstormProjects\\\\TrumpTwitter\\\\pages\\\\candidate.js\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport React from \"react\";\n\nCandidate.getInitialProps = async ({\n  req,\n  query\n}) => {\n  const pageRequest = `${\"http:\"}//${\"localhost:3000\"}/api/tweets?id=${query.id}`;\n  const res = await fetch(pageRequest);\n  const json = await res.json();\n  return {\n    name: query.title,\n    data: json\n  };\n};\n\nexport default function Candidate(ctx) {\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \" Political Tweeter Prototype V1! \"), __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" Tweets from  \"), ctx.data.tweets.map(post => __jsx(\"li\", {\n    key: post.twitter_post_id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Primary term: \", post.twitter.primary_term), __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Hashtag: \", post.twitter.hashtag), __jsx(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Date: \", post.twitter.date))));\n}","map":{"version":3,"sources":["C:/Users/DanLo/WebstormProjects/TrumpTwitter/pages/candidate.js"],"names":["useRouter","fetch","React","Candidate","getInitialProps","req","query","pageRequest","id","res","json","name","title","data","ctx","tweets","map","post","twitter_post_id","twitter","primary_term","hashtag","date"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEAC,SAAS,CAACC,eAAV,GAA4B,OAAO;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAP,KAA0B;AAClD,QAAMC,WAAW,GAAI,GAAE,OAAQ,KAAI,gBAAiB,kBAAiBD,KAAK,CAACE,EAAG,EAA9E;AACA,QAAMC,GAAG,GAAG,MAAMR,KAAK,CAACM,WAAD,CAAvB;AACA,QAAMG,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACA,SAAO;AAACC,IAAAA,IAAI,EAAEL,KAAK,CAACM,KAAb;AAAoBC,IAAAA,IAAI,EAAEH;AAA1B,GAAP;AACH,CALD;;AAQA,eAAe,SAASP,SAAT,CAAmBW,GAAnB,EAAwB;AACnC,SACI,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFA,EAGKA,GAAG,CAACD,IAAJ,CAASE,MAAT,CAAgBC,GAAhB,CAAoBC,IAAI,IACrB;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBD,IAAI,CAACE,OAAL,CAAaC,YAA/B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaH,IAAI,CAACE,OAAL,CAAaE,OAA1B,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUJ,IAAI,CAACE,OAAL,CAAaG,IAAvB,CAHJ,CADH,CAHL,CADJ;AAaH","sourcesContent":["import { useRouter } from 'next/router';\r\nimport fetch from 'isomorphic-unfetch'\r\nimport React from \"react\";\r\n\r\nCandidate.getInitialProps = async ({ req, query }) => {\r\n    const pageRequest = `${\"http:\"}//${\"localhost:3000\"}/api/tweets?id=${query.id}`;\r\n    const res = await fetch(pageRequest)\r\n    const json = await res.json()\r\n    return {name: query.title, data: json}\r\n};\r\n\r\n\r\nexport default function Candidate(ctx) {\r\n    return (\r\n        <>\r\n        <h1> Political Tweeter Prototype V1! </h1>\r\n        <h2> Tweets from  </h2>\r\n            {ctx.data.tweets.map(post => (\r\n                <li key={post.twitter_post_id}>\r\n                    <a>Primary term: {post.twitter.primary_term}</a>\r\n                    <a>Hashtag: {post.twitter.hashtag}</a>\r\n                    <a>Date: {post.twitter.date}</a>\r\n                </li>\r\n    ))}\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}