{"ast":null,"code":"const db = require('../../../lib/db');\n\nconst escape = require('sql-template-strings');\n\nmodule.exports = async (req, res) => {\n  res.status(200).json({\n    id: 0\n  });\n  let page = parseInt(req.query.page) || 1;\n  const limit = parseInt(req.query.limit) || 9;\n  if (page < 1) page = 1;\n  const profiles = await db.query(escape`\n      SELECT *\n      FROM candidates\n      ORDER BY candidate_id\n      LIMIT ${(page - 1) * limit}, ${limit}\n    `);\n  const count = await db.query(escape`\n      SELECT COUNT(*)\n      AS profilesCount\n      FROM candidates\n    `);\n  const {\n    profilesCount\n  } = count[0];\n  const pageCount = Math.ceil(profilesCount / limit); //res.status(200).json({ profiles, pageCount, page })\n};","map":{"version":3,"sources":["C:/Users/DanLo/WebstormProjects/TrumpTwitter/pages/api/profiles/index.js"],"names":["db","require","escape","module","exports","req","res","status","json","id","page","parseInt","query","limit","profiles","count","profilesCount","pageCount","Math","ceil"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,iBAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,sBAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjCA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,IAAAA,EAAE,EAAE;AAAL,GAArB;AACA,MAAIC,IAAI,GAAGC,QAAQ,CAACN,GAAG,CAACO,KAAJ,CAAUF,IAAX,CAAR,IAA4B,CAAvC;AACA,QAAMG,KAAK,GAAGF,QAAQ,CAACN,GAAG,CAACO,KAAJ,CAAUC,KAAX,CAAR,IAA6B,CAA3C;AACA,MAAIH,IAAI,GAAG,CAAX,EAAcA,IAAI,GAAG,CAAP;AACd,QAAMI,QAAQ,GAAG,MAAMd,EAAE,CAACY,KAAH,CAASV,MAAO;;;;cAI7B,CAACQ,IAAI,GAAG,CAAR,IAAaG,KAAM,KAAIA,KAAM;KAJhB,CAAvB;AAMA,QAAME,KAAK,GAAG,MAAMf,EAAE,CAACY,KAAH,CAASV,MAAO;;;;KAAhB,CAApB;AAKA,QAAM;AAAEc,IAAAA;AAAF,MAAoBD,KAAK,CAAC,CAAD,CAA/B;AACA,QAAME,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,aAAa,GAAGH,KAA1B,CAAlB,CAjBiC,CAkBjC;AAEH,CApBD","sourcesContent":["const db = require('../../../lib/db')\r\nconst escape = require('sql-template-strings')\r\n\r\nmodule.exports = async (req, res) => {\r\n    res.status(200).json({id: 0})\r\n    let page = parseInt(req.query.page) || 1\r\n    const limit = parseInt(req.query.limit) || 9\r\n    if (page < 1) page = 1\r\n    const profiles = await db.query(escape`\r\n      SELECT *\r\n      FROM candidates\r\n      ORDER BY candidate_id\r\n      LIMIT ${(page - 1) * limit}, ${limit}\r\n    `)\r\n    const count = await db.query(escape`\r\n      SELECT COUNT(*)\r\n      AS profilesCount\r\n      FROM candidates\r\n    `)\r\n    const { profilesCount } = count[0]\r\n    const pageCount = Math.ceil(profilesCount / limit)\r\n    //res.status(200).json({ profiles, pageCount, page })\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"script"}